boat:
  path: 'rhautoregression.boats.base_autoregression_boat'
  name: 'BaseAutoregressionBoat'

  models:
    net: $net
  
  losses: 
    net:
      path: 'rhopsr.nn.losses.weighted_loss'
      name: 'WeightedLoss'
      params:
        base_loss_fn_str: ce
      wrapper: # This wrapper is more complex needs parameters
        mpath: 'rhopsr.nn.losses.wrappers.list_of_keys.ListOfKeys'
        params:
          keys: ["preds", "targets", "weights"]

optimization: 
  net:
    path: 'torch.optim'
    name: 'Adam'
    params:
      lr: 0.001
      betas: [0.9, 0.999]
      weight_decay: 0.0
    lr_scheduler: {}
    
  use_ema:
    ema_decay: 0.995
    ema_start: $ema_start

trainer: 
  devices: $devices
  max_epochs: $max_epochs
  val_check_epochs: 1
  state_save_epochs: 1

visualization:
  save_images: true
  first_batch_only: true
  wnb: [0.0, 1.0]  # for visualization
  num_vis_samples: 4

validation: 
  target_metric_name: dummy_metric
  metrics:
    dummy_metric:
      path: 'rhcore.metrics.dummy_metric'
      name: 'DummyMetric'
      params: {}
      wrapper: 'rhcore.metrics.wrappers.dict_2_params.Dict2ListParams'

# Data configuration
data:
  path: rhcore.data.data_modules.ddp_data_module
  name: DistTrainDistValidDataModule
  config: 
    train_dataloader:
      dataset:
        path: 'rhcore.data.datasets.basic_image_dataset'
        name: 'BasicImageDataset'         # Name of the model class to use
        params:
          # max_dataset_size: 256
          folder_paths: $train_folder_paths
          data_prefix:
            gt: ''
          pipeline:
            - type: LoadImageFromFile
              keys: [gt]
              use_long: true
      batch_size: $train_batch_size
      num_workers: $num_workers
      pin_memory: false
      persistent_workers: true
      sampler:
        type: DefaultSampler
        shuffle: true

    # Validation dataloader configuration
    valid_dataloader:
      dataset:
        path: 'rhcore.data.datasets.basic_image_dataset'           # Path to import the model class
        name: 'BasicImageDataset'         # Name of the model class to use
        params:
          max_dataset_size: 32
          folder_paths: $valid_folder_paths
          data_prefix:
            gt: ''
          pipeline:
            - type: LoadImageFromFile
              keys: [gt]
              use_long: true
      batch_size: $valid_batch_size
      num_workers: $num_workers
      pin_memory: false
      persistent_workers: true
      sampler:
        type: DefaultSampler
        shuffle: true

logging:
  root_dir: 'work_dirs'
  name: $experiment_name
  loggers:
    tensorboard:
      path: 'trainer.loggers.tensorboard'
      name: 'TensorBoardLogger'
      params:
        log_dir: 'work_dirs'
        name: $experiment_name

callbacks: 
  - path: trainer.callbacks.state_cleaner
    name: KeepTopKStateCallback
    params:
      top_k: 5
